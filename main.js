!function(){"use strict";var e={832:function(e,t,n){e.exports=n.p+"4e8e0a1d604782a0dff8.svg"}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={exports:{}};return e[r](i,i.exports,n),i.exports}n.p="",function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e){var n=e.renderer,r=e.containerSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._renderer=n,this._container=document.querySelector(r)}var n,r;return n=t,(r=[{key:"setItems",value:function(e){this._container.prepend(e)}},{key:"clear",value:function(){this._container.innerHTML=""}},{key:"renderItems",value:function(e){var t=this;this.clear(),e.forEach((function(e){t._renderer(e)}))}}])&&e(n.prototype,r),t}();function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var o=function(){function e(t){var n=t.card,r=t.handleCardClick,o=t.handleDeleteClick,i=t.userData,a=t.handleLikeCard,u=t.templateSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=n.name,this._link=n.link,this._likedData=n.likes,this._timesLiked=n.likes.length,this._id=n._id,this._creatorName=n.owner.name,this._creatorId=n.owner._id,this._user=i._id,this._openPopup=r,this._handleDeleteClick=o,this._templateSelector=u,this._handleLikeCard=a}var t,n;return t=e,(n=[{key:"_toggleLikeStatus",value:function(e){var t=this;this._handleLikeCard(!e.target.classList.contains("element__heart_liked")).then((function(n){e.target.classList.toggle("element__heart_liked"),t._updateDisplayedLikes(e,n)})).catch((function(e){return console.error(e)}))}},{key:"_updateDisplayedLikes",value:function(e,t){this._newPlace.querySelector(".element__likes").textContent=t.likes.length}},{key:"_setEventListeners",value:function(){var e=this;this._deleteButton=this._newPlace.querySelector(".element__delete"),this._creatorId!==this._user?this._deleteButton.remove():this._deleteButton.addEventListener("click",(function(t){e._handleDeleteClick(t)})),this._likeButton=this._newPlace.querySelector(".element__heart"),this._likeButton.addEventListener("click",(function(t){e._toggleLikeStatus(t)})),this._placeImage=this._newPlace.querySelector(".element__image"),this._placeImage.addEventListener("click",(function(){e._openPopup(e._name,e._link)}))}},{key:"_getTemplate",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".element").cloneNode(!0)}},{key:"_setLikedStatus",value:function(){var e=this;this._newPlace.querySelector(".element__likes").textContent=this._timesLiked,this._likedData.some((function(t){return t._id===e._user}))&&this._newPlace.querySelector(".element__heart").classList.add("element__heart_liked")}},{key:"createCard",value:function(){return this._newPlace=this._getTemplate(),this._setEventListeners(),this._newPlace.querySelector(".element__name").textContent=this._name,this._placeImage.src=this._link,this._placeImage.alt="".concat(this._name),this._setLikedStatus(),this._newPlace}}])&&r(t.prototype,n),e}();function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._input=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButton=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._form=n,this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputList=Array.from(n.querySelectorAll(this._input))}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e,t){var n=this._form.querySelector(".popup__input-error_".concat(e.id));e.classList.add(this._inputErrorClass),n.textContent=t,n.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(e){var t=this._form.querySelector(".popup__input-error_".concat(e.id));e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_setEventListeners",value:function(){var e=this;this.toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e.toggleButtonState()}))}))}},{key:"_hasInvalidInput",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"toggleButtonState",value:function(){this._hasInvalidInput(this._inputList)?(this._submitButton.classList.add(this._inactiveButton),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._inactiveButton),this._submitButton.disabled=!1)}},{key:"enableValidation",value:function(){this._form.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}}])&&i(t.prototype,n),e}();function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var c=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this),this._handleOverlayClose=this._handleOverlayClose.bind(this)}var t,n;return t=e,(n=[{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"_handleOverlayClose",value:function(e){e.target.classList.contains("popup_opened")&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popup.querySelector(".popup__close").addEventListener("click",(function(){e.close()}))}},{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose),document.addEventListener("click",this._handleOverlayClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose),document.removeEventListener("click",this._handleOverlayClose)}}])&&u(t.prototype,n),e}();function s(e){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function f(e,t,n){return(f="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=_(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function p(e,t){return(p=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function h(e,t){return!t||"object"!==s(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function _(e){return(_=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var d=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&p(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=_(r);if(o){var n=_(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return h(this,e)});function a(e){var t,n=e.popupSelector,r=e.formSubmitHandler;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,n))._form=t._popup.querySelector(".popup__form"),t._button=t._popup.querySelector(".popup__save-button"),t._formSubmitHandler=r,t}return t=a,(n=[{key:"_getInputValues",value:function(){var e=Array.from(this._popup.querySelectorAll(".popup__input")),t={};return e.forEach((function(e){t[e.name]=e.value})),t}},{key:"open",value:function(){f(_(a.prototype),"open",this).call(this),this._button.textContent="Save"}},{key:"setEventListeners",value:function(){var e=this;f(_(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._button.textContent="Saving...",e._formSubmitHandler(e._getInputValues())}))}},{key:"close",value:function(){f(_(a.prototype),"close",this).call(this),this._form.reset()}}])&&l(t.prototype,n),a}(c);function v(e){return(v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function y(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function m(e,t,n){return(m="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=g(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function b(e,t){return(b=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function k(e,t){return!t||"object"!==v(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function g(e){return(g=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var S=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&b(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=g(r);if(o){var n=g(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return k(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._caption=t._popup.querySelector(".popup__caption"),t._image=t._popup.querySelector(".popup__image"),t}return t=a,(n=[{key:"open",value:function(e,t){this._caption.textContent=e,this._image.src=t,m(g(a.prototype),"open",this).call(this)}}])&&y(t.prototype,n),a}(c);function E(e){return(E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function w(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function C(e,t,n){return(C="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=P(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function L(e,t){return(L=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function O(e,t){return!t||"object"!==E(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function P(e){return(P=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var I=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&L(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=P(r);if(o){var n=P(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return O(this,e)});function a(e){var t,n=e.popupSelector,r=e.formSubmitHandler;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,n))._form=t._popup.querySelector(".popup__form"),t._button=t._popup.querySelector(".popup__save-button"),t._formSubmitHandler=r,t}return t=a,(n=[{key:"open",value:function(e,t){C(P(a.prototype),"open",this).call(this),this._button.textContent="Yes",this._cardId=t,this._card=e.target.parentElement}},{key:"setEventListeners",value:function(){var e=this;C(P(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._button.textContent="Deleting...",e._formSubmitHandler(e._card,e._cardId)}))}}])&&w(t.prototype,n),a}(c);function j(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var R=function(){function e(t){var n=t.name,r=t.about,o=t._id,i=t.avatar,a=t.nameElement,u=t.aboutElement,c=t.avatarElement;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=n,this._about=r,this._id=o,this._avatar=i,this._profileName=a,this._profileAbout=u,this._profileImage=c}var t,n;return t=e,(n=[{key:"updateUserInfo",value:function(e){var t=e.name,n=e.about,r=e._id,o=e.avatar;this._name=t||this._name,this._about=n||this._about,this._id=r||this._id,this._avatar=o||this._avatar}},{key:"removeAvatar",value:function(){this._profileImage.src="",this._profileImage.alt=""}},{key:"getUserInfo",value:function(){return{name:this._name,about:this._about,_id:this._id,avatar:this._avatar}}},{key:"renderUserInfo",value:function(){this._profileName.textContent=this._name,this._profileAbout.textContent=this._about,this._profileImage.src=this._avatar,this._profileImage.alt=this._name}}])&&j(t.prototype,n),e}();function q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var B,T=function(){function e(t){var n=t.baseUrl,r=t.authorization;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=n,this._auth=r}var t,n;return t=e,(n=[{key:"_checkResponse",value:function(e){return e.ok?e.json():Promise.reject("".concat(e.status," error!"))}},{key:"getUserInfo",value:function(){var e=this;return fetch(this._baseUrl+"/users/me",{headers:{authorization:this._auth}}).then((function(t){return e._checkResponse(t)}))}},{key:"getGroupCards",value:function(){var e=this;return fetch(this._baseUrl+"/cards",{headers:{authorization:this._auth}}).then((function(t){return e._checkResponse(t)}))}},{key:"updateProfile",value:function(e){var t=this,n=e.name,r=e.about;return fetch(this._baseUrl+"/users/me",{method:"PATCH",headers:{authorization:this._auth,"Content-Type":"application/json"},body:JSON.stringify({name:n,about:r})}).then((function(e){return t._checkResponse(e)}))}},{key:"updateAvatar",value:function(e){var t=this,n=e.avatar;return fetch(this._baseUrl+"/users/me/avatar",{method:"PATCH",headers:{authorization:this._auth,"Content-Type":"application/json"},body:JSON.stringify({avatar:n})}).then((function(e){return t._checkResponse(e)}))}},{key:"addCard",value:function(e){var t=this,n=e.name,r=e.link;return fetch(this._baseUrl+"/cards",{method:"POST",headers:{authorization:this._auth,"Content-Type":"application/json"},body:JSON.stringify({name:n,link:r})}).then((function(e){return t._checkResponse(e)}))}},{key:"likeCard",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:{authorization:this._auth,"Content-Type":"application/json"}}).then((function(e){return t._checkResponse(e)}))}},{key:"removeLike",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:{authorization:this._auth,"Content-Type":"application/json"}}).then((function(e){return t._checkResponse(e)}))}},{key:"deleteCard",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:{authorization:this._auth,"Content-Type":"application/json"}}).then((function(e){return t._checkResponse(e)}))}}])&&q(t.prototype,n),e}(),U=n(832),x=document.querySelector(".profile__edit-button"),D=document.querySelector(".popup__form_role_edit"),H=document.querySelector(".profile__avatar-overlay"),A=document.querySelector(".popup__form_role_avatar"),z=document.querySelector(".profile__add-button"),V=document.querySelector(".popup__form_role_add"),N=document.querySelector(".profile__name"),J=document.querySelector(".profile__title"),G=document.querySelector(".profile__avatar"),M=document.querySelector(".popup__input_role_name"),Y=document.querySelector(".popup__input_role_title"),F={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__save-button",inactiveButtonClass:"popup__save-button_disabled",inputErrorClass:"popup__input_invalid",errorClass:"popup__input-error_active"};B=U,document.getElementById("logo").src=B;var K=new T({baseUrl:"https://around.nomoreparties.co/v1/group-12",authorization:"d45050bb-6054-461f-a7d7-f299e145a1f0"}),Q=new a(F,V),W=new a(F,D),X=new a(F,A);W.enableValidation(),Q.enableValidation(),X.enableValidation();var Z=new R({nameElement:N,aboutElement:J,avatarElement:G}),$=new I({popupSelector:".popup_role_delete",formSubmitHandler:function(e,t){K.deleteCard(t).then((function(){e.remove(),$.close()})).catch((function(e){return console.error("Problem deleting card: ".concat(e))}))}}),ee=function(e){return new o({card:e,handleCardClick:function(e,t){ne.open(e,t)},handleDeleteClick:function(t){$.open(t,e._id)},userData:Z.getUserInfo(),handleLikeCard:function(t){return t?K.likeCard(e._id):K.removeLike(e._id)},templateSelector:"#place-template"})},te=new t({renderer:function(e){var t=ee(e);te.setItems(t.createCard())},containerSelector:".elements"}),ne=new S(".popup_role_image"),re=new d({popupSelector:".popup_role_edit",formSubmitHandler:function(e){K.updateProfile(e).then((function(){Z.updateUserInfo(e),Z.renderUserInfo(),re.close()})).catch((function(e){return console.error("Problem updating profile: ".concat(e))}))}}),oe=new d({popupSelector:".popup_role_add",formSubmitHandler:function(e){K.addCard(e).then((function(e){var t=ee(e);te.setItems(t.createCard())})).then((function(){return oe.close()})).catch((function(e){return console.error("Problem adding card: ".concat(e))}))}}),ie=new d({popupSelector:".popup_role_avatar",formSubmitHandler:function(e){Z.removeAvatar(),K.updateAvatar(e).then((function(){Z.updateUserInfo(e),Z.renderUserInfo(),ie.close()})).catch((function(e){return console.error("Problem updating avatar: ".concat(e))}))}});$.setEventListeners(),ne.setEventListeners(),re.setEventListeners(),oe.setEventListeners(),ie.setEventListeners(),x.addEventListener("click",(function(){var e=Z.getUserInfo(),t=e.name,n=e.about;M.value=t,Y.value=n,W.toggleButtonState(),re.open()})),z.addEventListener("click",(function(){oe.open(),Q.toggleButtonState()})),H.addEventListener("click",(function(){ie.open(),X.toggleButtonState()})),K.getUserInfo().then((function(e){Z.updateUserInfo(e)})).then((function(){K.getGroupCards().then((function(e){te.renderItems(e.reverse())}))})).then((function(){Z.renderUserInfo(),N.classList.remove("shimmer"),J.classList.remove("shimmer"),x.classList.remove("hide"),z.classList.remove("hide")})).catch((function(e){return console.error("Problem rendering content: ".concat(e))}))}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80L3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvd2VicGFjay9ydW50aW1lL3B1YmxpY1BhdGgiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL1BvcHVwLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL2NvbXBvbmVudHMvUG9wdXBEZWxldGUuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL1VzZXJJbmZvLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvdXRpbHMvY29uc3RhbnRzLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9BcGkuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9wYWdlcy9pbmRleC5qcyJdLCJuYW1lcyI6WyJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJ1bmRlZmluZWQiLCJleHBvcnRzIiwibW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsInAiLCJTZWN0aW9uIiwicmVuZGVyZXIiLCJjb250YWluZXJTZWxlY3RvciIsInRoaXMiLCJfcmVuZGVyZXIiLCJfY29udGFpbmVyIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiZWxlbWVudCIsInByZXBlbmQiLCJpbm5lckhUTUwiLCJpdGVtcyIsImNsZWFyIiwiZm9yRWFjaCIsIml0ZW0iLCJDYXJkIiwiY2FyZCIsImhhbmRsZUNhcmRDbGljayIsImhhbmRsZURlbGV0ZUNsaWNrIiwidXNlckRhdGEiLCJoYW5kbGVMaWtlQ2FyZCIsInRlbXBsYXRlU2VsZWN0b3IiLCJfbmFtZSIsIm5hbWUiLCJfbGluayIsImxpbmsiLCJfbGlrZWREYXRhIiwibGlrZXMiLCJfdGltZXNMaWtlZCIsImxlbmd0aCIsIl9pZCIsIl9jcmVhdG9yTmFtZSIsIm93bmVyIiwiX2NyZWF0b3JJZCIsIl91c2VyIiwiX29wZW5Qb3B1cCIsIl9oYW5kbGVEZWxldGVDbGljayIsIl90ZW1wbGF0ZVNlbGVjdG9yIiwiX2hhbmRsZUxpa2VDYXJkIiwiZXZ0IiwidGFyZ2V0IiwiY2xhc3NMaXN0IiwiY29udGFpbnMiLCJ0aGVuIiwidG9nZ2xlIiwiX3VwZGF0ZURpc3BsYXllZExpa2VzIiwiY2F0Y2giLCJlcnIiLCJjb25zb2xlIiwiZXJyb3IiLCJlIiwiX25ld1BsYWNlIiwidGV4dENvbnRlbnQiLCJfZGVsZXRlQnV0dG9uIiwicmVtb3ZlIiwiYWRkRXZlbnRMaXN0ZW5lciIsIl9saWtlQnV0dG9uIiwiX3RvZ2dsZUxpa2VTdGF0dXMiLCJfcGxhY2VJbWFnZSIsImNvbnRlbnQiLCJjbG9uZU5vZGUiLCJzb21lIiwiYWRkIiwiX2dldFRlbXBsYXRlIiwiX3NldEV2ZW50TGlzdGVuZXJzIiwic3JjIiwiYWx0IiwiX3NldExpa2VkU3RhdHVzIiwiRm9ybVZhbGlkYXRvciIsInNldHRpbmdzIiwiZm9ybUVsZW1lbnQiLCJfaW5wdXQiLCJpbnB1dFNlbGVjdG9yIiwiX3N1Ym1pdEJ1dHRvblNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJfaW5hY3RpdmVCdXR0b24iLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiX2lucHV0RXJyb3JDbGFzcyIsImlucHV0RXJyb3JDbGFzcyIsIl9lcnJvckNsYXNzIiwiZXJyb3JDbGFzcyIsIl9mb3JtIiwiX3N1Ym1pdEJ1dHRvbiIsIl9pbnB1dExpc3QiLCJBcnJheSIsImZyb20iLCJxdWVyeVNlbGVjdG9yQWxsIiwiaW5wdXRFbGVtZW50IiwiZXJyb3JNZXNzYWdlIiwiZXJyb3JFbGVtZW50IiwiaWQiLCJ2YWxpZGl0eSIsInZhbGlkIiwiX2hpZGVJbnB1dEVycm9yIiwiX3Nob3dJbnB1dEVycm9yIiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJ0b2dnbGVCdXR0b25TdGF0ZSIsIl9jaGVja0lucHV0VmFsaWRpdHkiLCJpbnB1dExpc3QiLCJpbnB1dCIsIl9oYXNJbnZhbGlkSW5wdXQiLCJkaXNhYmxlZCIsInByZXZlbnREZWZhdWx0IiwiUG9wdXAiLCJwb3B1cFNlbGVjdG9yIiwiX3BvcHVwIiwiX2hhbmRsZUVzY0Nsb3NlIiwiYmluZCIsIl9oYW5kbGVPdmVybGF5Q2xvc2UiLCJrZXkiLCJjbG9zZSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJQb3B1cFdpdGhGb3JtIiwiZm9ybVN1Ym1pdEhhbmRsZXIiLCJfYnV0dG9uIiwiX2Zvcm1TdWJtaXRIYW5kbGVyIiwiZGF0YSIsInZhbHVlIiwiX2dldElucHV0VmFsdWVzIiwicmVzZXQiLCJQb3B1cFdpdGhJbWFnZSIsIl9jYXB0aW9uIiwiX2ltYWdlIiwiUG9wdXBEZWxldGUiLCJjYXJkSWQiLCJfY2FyZElkIiwiX2NhcmQiLCJwYXJlbnRFbGVtZW50IiwiVXNlckluZm8iLCJhYm91dCIsImF2YXRhciIsIm5hbWVFbGVtZW50IiwiYWJvdXRFbGVtZW50IiwiYXZhdGFyRWxlbWVudCIsIl9hYm91dCIsIl9hdmF0YXIiLCJfcHJvZmlsZU5hbWUiLCJfcHJvZmlsZUFib3V0IiwiX3Byb2ZpbGVJbWFnZSIsInNvdXJjZSIsIkFwaSIsImJhc2VVcmwiLCJhdXRob3JpemF0aW9uIiwiX2Jhc2VVcmwiLCJfYXV0aCIsInJlcyIsIm9rIiwianNvbiIsIlByb21pc2UiLCJyZWplY3QiLCJzdGF0dXMiLCJmZXRjaCIsImhlYWRlcnMiLCJfY2hlY2tSZXNwb25zZSIsIm1ldGhvZCIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiZWRpdEJ1dHRvbiIsInByb2ZpbGVFZGl0b3JGb3JtIiwiYXZhdGFyQnV0dG9uIiwiYXZhdGFyVXBkYXRlRm9ybSIsImFkZEJ1dHRvbiIsImltYWdlQWRkZXJGb3JtIiwicHJvZmlsZU5hbWVFbGVtZW50IiwicHJvZmlsZUFib3V0RWxlbWVudCIsInByb2ZpbGVBdmF0YXJFbGVtZW50IiwicG9wdXBOYW1lIiwicG9wdXBUaXRsZSIsImZvcm1JdGVtcyIsImZvcm1TZWxlY3RvciIsImxvZ29TcmMiLCJnZXRFbGVtZW50QnlJZCIsImFwaSIsImFkZFBsYWNlVmFsaWRhdGlvbiIsInByb2ZpbGVWYWxpZGF0aW9uIiwiYXZhdGFyVmFsaWRhdGlvbiIsImVuYWJsZVZhbGlkYXRpb24iLCJ1c2VySW5mbyIsImNvbmZpcm1EZWxldGVQb3B1cCIsImNhcmRFbGVtZW50IiwiZGVsZXRlQ2FyZCIsImNyZWF0ZU5ld0NhcmQiLCJpbWFnZVByZXZpZXdQb3B1cCIsIm9wZW4iLCJnZXRVc2VySW5mbyIsImxpa2VDYXJkIiwicmVtb3ZlTGlrZSIsInBsYWNlQ2FyZHMiLCJuZXdDYXJkIiwic2V0SXRlbXMiLCJjcmVhdGVDYXJkIiwicHJvZmlsZUVkaXRvciIsInVwZGF0ZVByb2ZpbGUiLCJ1cGRhdGVVc2VySW5mbyIsInJlbmRlclVzZXJJbmZvIiwiaW1hZ2VBZGRlclBvcHVwIiwiYWRkQ2FyZCIsImNhcmREYXRhIiwiYXZhdGFyVXBkYXRlUG9wdXAiLCJyZW1vdmVBdmF0YXIiLCJ1cGRhdGVBdmF0YXIiLCJzZXRFdmVudExpc3RlbmVycyIsImdldEdyb3VwQ2FyZHMiLCJmZXRjaGVkQ2FyZHMiLCJyZW5kZXJJdGVtcyIsInJldmVyc2UiXSwibWFwcGluZ3MiOiIrRkFDSUEsRUFBMkIsR0FHL0IsU0FBU0MsRUFBb0JDLEdB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QUFpSyxHQUN2QmhCLEdBQVdpQixZQUFZRCxFQUFhRSxpQkFJdkNuSyxNQUFLLFdBQ0p1SSxFQUFTaUIsaUJBcEJYL0IsbUJBQW9DLFdBQ3BDQyxtQkFBcUMsV0FDckNQLG1CQUE0QixRQUM1QkksbUJBQTJCLFdBb0IxQnBILE9BQU0sU0FBQUMsR0FBRyxPQUFJQyxRQUFRQyxNQUFSLHFDQUE0Q0YsTyIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHQvLyBubyBtb2R1bGUuaWQgbmVlZGVkXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIl9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VjdGlvbiB7XG4gIGNvbnN0cnVjdG9yKHsgcmVuZGVyZXIsIGNvbnRhaW5lclNlbGVjdG9yIH0pIHtcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xuICAgIHRoaXMuX2NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoY29udGFpbmVyU2VsZWN0b3IpO1xuICB9XG5cbiAgc2V0SXRlbXMoZWxlbWVudCkge1xuICAgIHRoaXMuX2NvbnRhaW5lci5wcmVwZW5kKGVsZW1lbnQpO1xuICB9XG5cbiAgY2xlYXIoKSB7XG4gICAgdGhpcy5fY29udGFpbmVyLmlubmVySFRNTCA9ICcnO1xuICB9XG5cbiAgcmVuZGVySXRlbXMoaXRlbXMpIHtcbiAgICB0aGlzLmNsZWFyKCk7XG5cbiAgICBpdGVtcy5mb3JFYWNoKGl0ZW0gPT4ge1xuICAgICAgdGhpcy5fcmVuZGVyZXIoaXRlbSk7XG4gICAgfSk7XG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIENhcmQge1xuICBjb25zdHJ1Y3Rvcih7IGNhcmQsIGhhbmRsZUNhcmRDbGljaywgaGFuZGxlRGVsZXRlQ2xpY2ssIHVzZXJEYXRhLCBoYW5kbGVMaWtlQ2FyZCwgdGVtcGxhdGVTZWxlY3RvciB9KSB7XG4gICAgdGhpcy5fbmFtZSA9IGNhcmQubmFtZTtcbiAgICB0aGlzLl9saW5rID0gY2FyZC5saW5rO1xuICAgIHRoaXMuX2xpa2VkRGF0YSA9IGNhcmQubGlrZXM7XG4gICAgdGhpcy5fdGltZXNMaWtlZCA9IGNhcmQubGlrZXMubGVuZ3RoO1xuICAgIHRoaXMuX2lkID0gY2FyZC5faWQ7XG4gICAgdGhpcy5fY3JlYXRvck5hbWUgPSBjYXJkLm93bmVyLm5hbWU7XG4gICAgdGhpcy5fY3JlYXRvcklkID0gY2FyZC5vd25lci5faWQ7XG4gICAgdGhpcy5fdXNlciA9IHVzZXJEYXRhLl9pZDtcbiAgICB0aGlzLl9vcGVuUG9wdXAgPSBoYW5kbGVDYXJkQ2xpY2s7XG4gICAgdGhpcy5faGFuZGxlRGVsZXRlQ2xpY2sgPSBoYW5kbGVEZWxldGVDbGljaztcbiAgICB0aGlzLl90ZW1wbGF0ZVNlbGVjdG9yID0gdGVtcGxhdGVTZWxlY3RvcjtcbiAgICB0aGlzLl9oYW5kbGVMaWtlQ2FyZCA9IGhhbmRsZUxpa2VDYXJkO1xuICB9XG5cbiAgX3RvZ2dsZUxpa2VTdGF0dXMoZXZ0KSB7XG4gICAgLy8gY2FyZCBoYXMgbm90IGJlZW4gbGlrZWQgeWV0XG4gICAgdGhpcy5faGFuZGxlTGlrZUNhcmQoIWV2dC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdlbGVtZW50X19oZWFydF9saWtlZCcpKVxuICAgICAgLnRoZW4oY2FyZCA9PiB7XG4gICAgICAgIGV2dC50YXJnZXQuY2xhc3NMaXN0LnRvZ2dsZSgnZWxlbWVudF9faGVhcnRfbGlrZWQnKTtcbiAgICAgICAgdGhpcy5fdXBkYXRlRGlzcGxheWVkTGlrZXMoZXZ0LCBjYXJkKTtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goZXJyID0+IGNvbnNvbGUuZXJyb3IoZXJyKSk7XG4gIH1cblxuICBfdXBkYXRlRGlzcGxheWVkTGlrZXMoZSwgY2FyZCkge1xuICAgIGNvbnN0IGRpc3BsYXllZExpa2VzRWxlbWVudCA9IHRoaXMuX25ld1BsYWNlLnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50X19saWtlcycpO1xuICAgIGRpc3BsYXllZExpa2VzRWxlbWVudC50ZXh0Q29udGVudCA9IGNhcmQubGlrZXMubGVuZ3RoO1xuICB9XG5cbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX2RlbGV0ZUJ1dHRvbiA9IHRoaXMuX25ld1BsYWNlLnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50X19kZWxldGUnKTtcbiAgICBpZiAoISh0aGlzLl9jcmVhdG9ySWQgPT09IHRoaXMuX3VzZXIpKSB7XG4gICAgICB0aGlzLl9kZWxldGVCdXR0b24ucmVtb3ZlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX2RlbGV0ZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGV2dCA9PiB7XG4gICAgICAgIHRoaXMuX2hhbmRsZURlbGV0ZUNsaWNrKGV2dCk7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICB0aGlzLl9saWtlQnV0dG9uID0gdGhpcy5fbmV3UGxhY2UucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX2hlYXJ0Jyk7XG4gICAgdGhpcy5fbGlrZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGV2dCA9PiB7XG4gICAgICB0aGlzLl90b2dnbGVMaWtlU3RhdHVzKGV2dCk7XG4gICAgfSk7XG5cbiAgICB0aGlzLl9wbGFjZUltYWdlID0gdGhpcy5fbmV3UGxhY2UucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX2ltYWdlJyk7XG4gICAgdGhpcy5fcGxhY2VJbWFnZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgIHRoaXMuX29wZW5Qb3B1cCh0aGlzLl9uYW1lLCB0aGlzLl9saW5rKTtcbiAgICB9KTtcbiAgfVxuXG4gIF9nZXRUZW1wbGF0ZSgpIHtcbiAgICBjb25zdCBjYXJkRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5fdGVtcGxhdGVTZWxlY3RvcikuY29udGVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudCcpLmNsb25lTm9kZSh0cnVlKTtcbiAgICByZXR1cm4gY2FyZEVsZW1lbnQ7XG4gIH1cblxuICBfc2V0TGlrZWRTdGF0dXMoKSB7XG4gICAgdGhpcy5fbmV3UGxhY2UucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX2xpa2VzJykudGV4dENvbnRlbnQgPSB0aGlzLl90aW1lc0xpa2VkO1xuICAgIGNvbnN0IHVzZXJIYXNMaWtlZCA9IHRoaXMuX2xpa2VkRGF0YS5zb21lKGxpa2VzID0+IGxpa2VzLl9pZCA9PT0gdGhpcy5fdXNlcik7XG4gICAgaWYgKHVzZXJIYXNMaWtlZCkge1xuICAgICAgdGhpcy5fbmV3UGxhY2UucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX2hlYXJ0JykuY2xhc3NMaXN0LmFkZCgnZWxlbWVudF9faGVhcnRfbGlrZWQnKTtcbiAgICB9XG4gIH1cblxuICBjcmVhdGVDYXJkKCkge1xuICAgIHRoaXMuX25ld1BsYWNlID0gdGhpcy5fZ2V0VGVtcGxhdGUoKTtcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xuXG4gICAgdGhpcy5fbmV3UGxhY2UucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX25hbWUnKS50ZXh0Q29udGVudCA9IHRoaXMuX25hbWU7XG4gICAgdGhpcy5fcGxhY2VJbWFnZS5zcmMgPSB0aGlzLl9saW5rO1xuICAgIHRoaXMuX3BsYWNlSW1hZ2UuYWx0ID0gYCR7dGhpcy5fbmFtZX1gO1xuICAgIHRoaXMuX3NldExpa2VkU3RhdHVzKCk7XG5cbiAgICByZXR1cm4gdGhpcy5fbmV3UGxhY2U7XG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEZvcm1WYWxpZGF0b3Ige1xuICBjb25zdHJ1Y3RvcihzZXR0aW5ncywgZm9ybUVsZW1lbnQpIHtcbiAgICB0aGlzLl9pbnB1dCA9IHNldHRpbmdzLmlucHV0U2VsZWN0b3I7XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IgPSBzZXR0aW5ncy5zdWJtaXRCdXR0b25TZWxlY3RvcjtcbiAgICB0aGlzLl9pbmFjdGl2ZUJ1dHRvbiA9IHNldHRpbmdzLmluYWN0aXZlQnV0dG9uQ2xhc3M7XG4gICAgdGhpcy5faW5wdXRFcnJvckNsYXNzID0gc2V0dGluZ3MuaW5wdXRFcnJvckNsYXNzO1xuICAgIHRoaXMuX2Vycm9yQ2xhc3MgPSBzZXR0aW5ncy5lcnJvckNsYXNzO1xuICAgIHRoaXMuX2Zvcm0gPSBmb3JtRWxlbWVudDtcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24gPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IodGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IpO1xuICAgIHRoaXMuX2lucHV0TGlzdCA9IEFycmF5LmZyb20oZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9pbnB1dCkpO1xuICB9XG5cbiAgX3Nob3dJbnB1dEVycm9yKGlucHV0RWxlbWVudCwgZXJyb3JNZXNzYWdlKSB7XG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yKGAucG9wdXBfX2lucHV0LWVycm9yXyR7aW5wdXRFbGVtZW50LmlkfWApO1xuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gZXJyb3JNZXNzYWdlO1xuICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2Vycm9yQ2xhc3MpO1xuICB9XG5cbiAgX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCkge1xuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvcihgLnBvcHVwX19pbnB1dC1lcnJvcl8ke2lucHV0RWxlbWVudC5pZH1gKTtcbiAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xuICAgIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9ICcnO1xuICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2Vycm9yQ2xhc3MpO1xuICB9XG5cbiAgX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsZW1lbnQpIHtcbiAgICBpZiAoIWlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZCkge1xuICAgICAgdGhpcy5fc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50LCBpbnB1dEVsZW1lbnQudmFsaWRhdGlvbk1lc3NhZ2UpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpO1xuICAgIH1cbiAgfVxuXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcbiAgICB0aGlzLnRvZ2dsZUJ1dHRvblN0YXRlKCk7XG5cbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaChpbnB1dEVsZW1lbnQgPT4ge1xuICAgICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2lucHV0JywgKCkgPT4ge1xuICAgICAgICB0aGlzLl9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbGVtZW50KTtcbiAgICAgICAgdGhpcy50b2dnbGVCdXR0b25TdGF0ZSgpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBfaGFzSW52YWxpZElucHV0KGlucHV0TGlzdCkge1xuICAgIHJldHVybiBpbnB1dExpc3Quc29tZShpbnB1dCA9PiB7XG4gICAgICByZXR1cm4gIWlucHV0LnZhbGlkaXR5LnZhbGlkO1xuICAgIH0pO1xuICB9XG5cbiAgdG9nZ2xlQnV0dG9uU3RhdGUoKSB7XG4gICAgaWYgKHRoaXMuX2hhc0ludmFsaWRJbnB1dCh0aGlzLl9pbnB1dExpc3QpKSB7XG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24uY2xhc3NMaXN0LmFkZCh0aGlzLl9pbmFjdGl2ZUJ1dHRvbik7XG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24uZGlzYWJsZWQgPSB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24uY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbmFjdGl2ZUJ1dHRvbik7XG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24uZGlzYWJsZWQgPSBmYWxzZTtcbiAgICB9XG4gIH1cblxuICBlbmFibGVWYWxpZGF0aW9uKCkge1xuICAgIHRoaXMuX2Zvcm0uYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgZSA9PiB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgfSk7XG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XG4gICAgdGhpcy5fcG9wdXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHBvcHVwU2VsZWN0b3IpO1xuICAgIHRoaXMuX2hhbmRsZUVzY0Nsb3NlID0gdGhpcy5faGFuZGxlRXNjQ2xvc2UuYmluZCh0aGlzKTtcbiAgICB0aGlzLl9oYW5kbGVPdmVybGF5Q2xvc2UgPSB0aGlzLl9oYW5kbGVPdmVybGF5Q2xvc2UuYmluZCh0aGlzKTtcbiAgfVxuXG4gIF9oYW5kbGVFc2NDbG9zZShlKSB7XG4gICAgaWYgKGUua2V5ID09PSBcIkVzY2FwZVwiKSB7XG4gICAgICB0aGlzLmNsb3NlKCk7XG4gICAgfVxuICB9XG5cbiAgX2hhbmRsZU92ZXJsYXlDbG9zZShlKSB7XG4gICAgaWYgKGUudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcInBvcHVwX29wZW5lZFwiKSkge1xuICAgICAgdGhpcy5jbG9zZSgpO1xuICAgIH1cbiAgfVxuXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIGNvbnN0IGNsb3NlQnV0dG9uID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fY2xvc2VcIik7XG4gICAgY2xvc2VCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9KTtcbiAgfVxuXG4gIG9wZW4oKSB7XG4gICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LmFkZChcInBvcHVwX29wZW5lZFwiKTtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRoaXMuX2hhbmRsZU92ZXJsYXlDbG9zZSk7XG4gIH1cblxuICBjbG9zZSgpIHtcbiAgICB0aGlzLl9wb3B1cC5jbGFzc0xpc3QucmVtb3ZlKFwicG9wdXBfb3BlbmVkXCIpO1xuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdGhpcy5faGFuZGxlT3ZlcmxheUNsb3NlKTtcbiAgfVxufVxuIiwiaW1wb3J0IFBvcHVwIGZyb20gJy4vUG9wdXAuanMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcih7IHBvcHVwU2VsZWN0b3IsIGZvcm1TdWJtaXRIYW5kbGVyIH0pIHtcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcbiAgICB0aGlzLl9mb3JtID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcignLnBvcHVwX19mb3JtJyk7XG4gICAgdGhpcy5fYnV0dG9uID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcignLnBvcHVwX19zYXZlLWJ1dHRvbicpO1xuICAgIHRoaXMuX2Zvcm1TdWJtaXRIYW5kbGVyID0gZm9ybVN1Ym1pdEhhbmRsZXI7XG4gIH1cblxuICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XG4gICAgY29uc3QgaW5wdXRMaXN0ID0gQXJyYXkuZnJvbSh0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yQWxsKCcucG9wdXBfX2lucHV0JykpO1xuICAgIGNvbnN0IGRhdGEgPSB7fTtcbiAgICBpbnB1dExpc3QuZm9yRWFjaChpbnB1dCA9PiB7XG4gICAgICBkYXRhW2lucHV0Lm5hbWVdID0gaW5wdXQudmFsdWU7XG4gICAgfSk7XG4gICAgcmV0dXJuIGRhdGE7XG4gIH1cbiAgb3BlbigpIHtcbiAgICBzdXBlci5vcGVuKCk7XG4gICAgdGhpcy5fYnV0dG9uLnRleHRDb250ZW50ID0gJ1NhdmUnO1xuICB9XG5cbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgICB0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIGV2dCA9PiB7XG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIHRoaXMuX2J1dHRvbi50ZXh0Q29udGVudCA9ICdTYXZpbmcuLi4nO1xuICAgICAgdGhpcy5fZm9ybVN1Ym1pdEhhbmRsZXIodGhpcy5fZ2V0SW5wdXRWYWx1ZXMoKSk7XG4gICAgfSk7XG4gIH1cblxuICBjbG9zZSgpIHtcbiAgICBzdXBlci5jbG9zZSgpO1xuICAgIHRoaXMuX2Zvcm0ucmVzZXQoKTtcbiAgfVxufVxuIiwiaW1wb3J0IFBvcHVwIGZyb20gJy4vUG9wdXAuanMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xuICAgIHRoaXMuX2NhcHRpb24gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2NhcHRpb24nKTtcbiAgICB0aGlzLl9pbWFnZSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9faW1hZ2UnKTtcbiAgfVxuXG4gIG9wZW4obmFtZSwgbGluaykge1xuICAgIHRoaXMuX2NhcHRpb24udGV4dENvbnRlbnQgPSBuYW1lO1xuICAgIHRoaXMuX2ltYWdlLnNyYyA9IGxpbms7XG4gICAgc3VwZXIub3BlbigpO1xuICB9XG59XG4iLCJpbXBvcnQgUG9wdXAgZnJvbSAnLi9Qb3B1cC5qcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwRGVsZXRlIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcih7IHBvcHVwU2VsZWN0b3IsIGZvcm1TdWJtaXRIYW5kbGVyIH0pIHtcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcbiAgICB0aGlzLl9mb3JtID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcignLnBvcHVwX19mb3JtJyk7XG4gICAgdGhpcy5fYnV0dG9uID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcignLnBvcHVwX19zYXZlLWJ1dHRvbicpO1xuICAgIHRoaXMuX2Zvcm1TdWJtaXRIYW5kbGVyID0gZm9ybVN1Ym1pdEhhbmRsZXI7XG4gIH1cblxuICBvcGVuKGV2dCwgY2FyZElkKSB7XG4gICAgc3VwZXIub3BlbigpO1xuICAgIHRoaXMuX2J1dHRvbi50ZXh0Q29udGVudCA9ICdZZXMnO1xuICAgIHRoaXMuX2NhcmRJZCA9IGNhcmRJZDtcbiAgICB0aGlzLl9jYXJkID0gZXZ0LnRhcmdldC5wYXJlbnRFbGVtZW50O1xuICB9XG5cbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgICB0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIGV2dCA9PiB7XG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIHRoaXMuX2J1dHRvbi50ZXh0Q29udGVudCA9ICdEZWxldGluZy4uLic7XG4gICAgICB0aGlzLl9mb3JtU3VibWl0SGFuZGxlcih0aGlzLl9jYXJkLCB0aGlzLl9jYXJkSWQpO1xuICAgIH0pO1xuICB9XG59XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBVc2VySW5mbyB7XG4gIGNvbnN0cnVjdG9yKHsgbmFtZSwgYWJvdXQsIF9pZCwgYXZhdGFyLCBuYW1lRWxlbWVudCwgYWJvdXRFbGVtZW50LCBhdmF0YXJFbGVtZW50IH0pIHtcbiAgICB0aGlzLl9uYW1lID0gbmFtZTtcbiAgICB0aGlzLl9hYm91dCA9IGFib3V0O1xuICAgIHRoaXMuX2lkID0gX2lkO1xuICAgIHRoaXMuX2F2YXRhciA9IGF2YXRhcjtcblxuICAgIHRoaXMuX3Byb2ZpbGVOYW1lID0gbmFtZUVsZW1lbnQ7XG4gICAgdGhpcy5fcHJvZmlsZUFib3V0ID0gYWJvdXRFbGVtZW50O1xuICAgIHRoaXMuX3Byb2ZpbGVJbWFnZSA9IGF2YXRhckVsZW1lbnQ7XG4gIH1cblxuICB1cGRhdGVVc2VySW5mbyh7IG5hbWUsIGFib3V0LCBfaWQsIGF2YXRhciB9KSB7XG4gICAgdGhpcy5fbmFtZSA9IG5hbWUgfHwgdGhpcy5fbmFtZTtcbiAgICB0aGlzLl9hYm91dCA9IGFib3V0IHx8IHRoaXMuX2Fib3V0O1xuICAgIHRoaXMuX2lkID0gX2lkIHx8IHRoaXMuX2lkO1xuICAgIHRoaXMuX2F2YXRhciA9IGF2YXRhciB8fCB0aGlzLl9hdmF0YXI7XG4gIH1cblxuICByZW1vdmVBdmF0YXIoKSB7XG4gICAgdGhpcy5fcHJvZmlsZUltYWdlLnNyYyA9ICcnO1xuICAgIHRoaXMuX3Byb2ZpbGVJbWFnZS5hbHQgPSAnJztcbiAgfVxuXG4gIGdldFVzZXJJbmZvKCkge1xuICAgIHJldHVybiB7XG4gICAgICBuYW1lOiB0aGlzLl9uYW1lLFxuICAgICAgYWJvdXQ6IHRoaXMuX2Fib3V0LFxuICAgICAgX2lkOiB0aGlzLl9pZCxcbiAgICAgIGF2YXRhcjogdGhpcy5fYXZhdGFyLFxuICAgIH07XG4gIH1cblxuICByZW5kZXJVc2VySW5mbygpIHtcbiAgICAvLyBwb3B1bGF0ZSBwcm9maWxlIHdpdGggdXNlckluZm9cbiAgICB0aGlzLl9wcm9maWxlTmFtZS50ZXh0Q29udGVudCA9IHRoaXMuX25hbWU7XG4gICAgdGhpcy5fcHJvZmlsZUFib3V0LnRleHRDb250ZW50ID0gdGhpcy5fYWJvdXQ7XG4gICAgdGhpcy5fcHJvZmlsZUltYWdlLnNyYyA9IHRoaXMuX2F2YXRhcjtcbiAgICB0aGlzLl9wcm9maWxlSW1hZ2UuYWx0ID0gdGhpcy5fbmFtZTtcbiAgfVxufVxuIiwiLy8gQ09OU1RBTlRTXG5cbmV4cG9ydCBjb25zdCBwbGFjZXNDb250YWluZXJTZWxlY3RvciA9ICcuZWxlbWVudHMnO1xuZXhwb3J0IGNvbnN0IGVkaXRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fZWRpdC1idXR0b24nKTtcbmV4cG9ydCBjb25zdCBwcm9maWxlRWRpdG9yRm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fZm9ybV9yb2xlX2VkaXQnKTtcbmV4cG9ydCBjb25zdCBhdmF0YXJCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fYXZhdGFyLW92ZXJsYXknKTtcbmV4cG9ydCBjb25zdCBhdmF0YXJVcGRhdGVGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX19mb3JtX3JvbGVfYXZhdGFyJyk7XG5leHBvcnQgY29uc3QgYWRkQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2FkZC1idXR0b24nKTtcbmV4cG9ydCBjb25zdCBpbWFnZUFkZGVyRm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fZm9ybV9yb2xlX2FkZCcpO1xuZXhwb3J0IGNvbnN0IHByb2ZpbGVOYW1lRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19uYW1lJyk7XG5leHBvcnQgY29uc3QgcHJvZmlsZUFib3V0RWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX190aXRsZScpO1xuZXhwb3J0IGNvbnN0IHByb2ZpbGVBdmF0YXJFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2F2YXRhcicpO1xuZXhwb3J0IGNvbnN0IHBvcHVwTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9faW5wdXRfcm9sZV9uYW1lJyk7XG5leHBvcnQgY29uc3QgcG9wdXBUaXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9faW5wdXRfcm9sZV90aXRsZScpO1xuXG5leHBvcnQgY29uc3QgbG9nb0ltZyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdsb2dvJyk7XG5cbmV4cG9ydCBjb25zdCBmb3JtSXRlbXMgPSB7XG4gIGZvcm1TZWxlY3RvcjogJy5wb3B1cF9fZm9ybScsXG4gIGlucHV0U2VsZWN0b3I6ICcucG9wdXBfX2lucHV0JyxcbiAgc3VibWl0QnV0dG9uU2VsZWN0b3I6ICcucG9wdXBfX3NhdmUtYnV0dG9uJyxcbiAgaW5hY3RpdmVCdXR0b25DbGFzczogJ3BvcHVwX19zYXZlLWJ1dHRvbl9kaXNhYmxlZCcsXG4gIGlucHV0RXJyb3JDbGFzczogJ3BvcHVwX19pbnB1dF9pbnZhbGlkJyxcbiAgZXJyb3JDbGFzczogJ3BvcHVwX19pbnB1dC1lcnJvcl9hY3RpdmUnLFxufTtcblxuZXhwb3J0IGNvbnN0IHNldEltYWdlU291cmNlID0gZnVuY3Rpb24gKGltYWdlRWxlbWVudCwgc291cmNlKSB7XG4gIGltYWdlRWxlbWVudC5zcmMgPSBzb3VyY2U7XG59O1xuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXBpIHtcbiAgY29uc3RydWN0b3IoeyBiYXNlVXJsLCBhdXRob3JpemF0aW9uIH0pIHtcbiAgICAvLyBjb25zdHJ1Y3RvciBib2R5XG4gICAgdGhpcy5fYmFzZVVybCA9IGJhc2VVcmw7XG4gICAgdGhpcy5fYXV0aCA9IGF1dGhvcml6YXRpb247XG4gIH1cblxuICBfY2hlY2tSZXNwb25zZShyZXMpIHtcbiAgICB7XG4gICAgICBpZiAoIXJlcy5vaykge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYCR7cmVzLnN0YXR1c30gZXJyb3IhYCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICB9XG4gIH1cblxuICBnZXRVc2VySW5mbygpIHtcbiAgICByZXR1cm4gZmV0Y2godGhpcy5fYmFzZVVybCArICcvdXNlcnMvbWUnLCB7XG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgIGF1dGhvcml6YXRpb246IHRoaXMuX2F1dGgsXG4gICAgICB9LFxuICAgIH0pLnRoZW4ocmVzID0+IHRoaXMuX2NoZWNrUmVzcG9uc2UocmVzKSk7XG4gIH1cblxuICBnZXRHcm91cENhcmRzKCkge1xuICAgIHJldHVybiBmZXRjaCh0aGlzLl9iYXNlVXJsICsgJy9jYXJkcycsIHtcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgYXV0aG9yaXphdGlvbjogdGhpcy5fYXV0aCxcbiAgICAgIH0sXG4gICAgfSkudGhlbihyZXMgPT4gdGhpcy5fY2hlY2tSZXNwb25zZShyZXMpKTtcbiAgfVxuXG4gIHVwZGF0ZVByb2ZpbGUoeyBuYW1lLCBhYm91dCB9KSB7XG4gICAgcmV0dXJuIGZldGNoKHRoaXMuX2Jhc2VVcmwgKyAnL3VzZXJzL21lJywge1xuICAgICAgbWV0aG9kOiAnUEFUQ0gnLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICBhdXRob3JpemF0aW9uOiB0aGlzLl9hdXRoLFxuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgfSxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgbmFtZTogbmFtZSxcbiAgICAgICAgYWJvdXQ6IGFib3V0LFxuICAgICAgfSksXG4gICAgfSkudGhlbihyZXMgPT4gdGhpcy5fY2hlY2tSZXNwb25zZShyZXMpKTtcbiAgfVxuXG4gIHVwZGF0ZUF2YXRhcih7IGF2YXRhciB9KSB7XG4gICAgcmV0dXJuIGZldGNoKHRoaXMuX2Jhc2VVcmwgKyAnL3VzZXJzL21lL2F2YXRhcicsIHtcbiAgICAgIG1ldGhvZDogJ1BBVENIJyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgYXV0aG9yaXphdGlvbjogdGhpcy5fYXV0aCxcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgIH0sXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IGF2YXRhcjogYXZhdGFyIH0pLFxuICAgIH0pLnRoZW4ocmVzID0+IHRoaXMuX2NoZWNrUmVzcG9uc2UocmVzKSk7XG4gIH1cblxuICBhZGRDYXJkKHsgbmFtZSwgbGluayB9KSB7XG4gICAgcmV0dXJuIGZldGNoKHRoaXMuX2Jhc2VVcmwgKyAnL2NhcmRzJywge1xuICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgIGF1dGhvcml6YXRpb246IHRoaXMuX2F1dGgsXG4gICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICB9LFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICBuYW1lLFxuICAgICAgICBsaW5rLFxuICAgICAgfSksXG4gICAgfSkudGhlbihyZXMgPT4gdGhpcy5fY2hlY2tSZXNwb25zZShyZXMpKTtcbiAgfVxuXG4gIGxpa2VDYXJkKGNhcmRJZCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy9saWtlcy8ke2NhcmRJZH1gLCB7XG4gICAgICBtZXRob2Q6ICdQVVQnLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICBhdXRob3JpemF0aW9uOiB0aGlzLl9hdXRoLFxuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgfSxcbiAgICB9KS50aGVuKHJlcyA9PiB0aGlzLl9jaGVja1Jlc3BvbnNlKHJlcykpO1xuICB9XG5cbiAgcmVtb3ZlTGlrZShjYXJkSWQpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvbGlrZXMvJHtjYXJkSWR9YCwge1xuICAgICAgbWV0aG9kOiAnREVMRVRFJyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgYXV0aG9yaXphdGlvbjogdGhpcy5fYXV0aCxcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgIH0sXG4gICAgfSkudGhlbihyZXMgPT4gdGhpcy5fY2hlY2tSZXNwb25zZShyZXMpKTtcbiAgfVxuXG4gIGRlbGV0ZUNhcmQoY2FyZElkKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzLyR7Y2FyZElkfWAsIHtcbiAgICAgIG1ldGhvZDogJ0RFTEVURScsXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgIGF1dGhvcml6YXRpb246IHRoaXMuX2F1dGgsXG4gICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICB9LFxuICAgIH0pLnRoZW4ocmVzID0+IHRoaXMuX2NoZWNrUmVzcG9uc2UocmVzKSk7XG4gIH1cbn1cbiIsIi8vIC0tLVxuLy8gSU1QT1JUIFVUSUxJVElFU1xuLy8gLS0tXG5cbi8vIGltcG9ydCBwcmltYXJ5IHN0eWxlc2hlZXRcbmltcG9ydCAnLi9pbmRleC5jc3MnO1xuXG4vLyBpbXBvcnQgbW9kdWxlc1xuaW1wb3J0IFNlY3Rpb24gZnJvbSAnLi4vY29tcG9uZW50cy9TZWN0aW9uLmpzJztcbmltcG9ydCBDYXJkIGZyb20gJy4uL2NvbXBvbmVudHMvQ2FyZC5qcyc7XG5pbXBvcnQgRm9ybVZhbGlkYXRvciBmcm9tICcuLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMnO1xuaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSAnLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzJztcbmltcG9ydCBQb3B1cFdpdGhJbWFnZSBmcm9tICcuLi9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzJztcbmltcG9ydCBQb3B1cERlbGV0ZSBmcm9tICcuLi9jb21wb25lbnRzL1BvcHVwRGVsZXRlLmpzJztcbmltcG9ydCBVc2VySW5mbyBmcm9tICcuLi9jb21wb25lbnRzL1VzZXJJbmZvLmpzJztcbmltcG9ydCBBcGkgZnJvbSAnLi4vY29tcG9uZW50cy9BcGkuanMnO1xuaW1wb3J0IGxvZ29TcmMgZnJvbSAnLi4vaW1hZ2VzL2xvZ28uc3ZnJzsgLy8gTG9nb1xuaW1wb3J0IHsgcGxhY2VzQ29udGFpbmVyU2VsZWN0b3IsIGVkaXRCdXR0b24sIHByb2ZpbGVFZGl0b3JGb3JtLCBhdmF0YXJVcGRhdGVGb3JtLCBhdmF0YXJCdXR0b24sIGFkZEJ1dHRvbiwgaW1hZ2VBZGRlckZvcm0sIHBvcHVwTmFtZSwgcG9wdXBUaXRsZSwgc2V0SW1hZ2VTb3VyY2UsIGxvZ29JbWcsIGZvcm1JdGVtcywgcHJvZmlsZU5hbWVFbGVtZW50LCBwcm9maWxlQWJvdXRFbGVtZW50LCBwcm9maWxlQXZhdGFyRWxlbWVudCB9IGZyb20gJy4uL3V0aWxzL2NvbnN0YW50cy5qcyc7XG5cbnNldEltYWdlU291cmNlKGxvZ29JbWcsIGxvZ29TcmMpO1xuXG4vLyAtLS1cbi8vIElOSVRJQUxJWkUgQ0xBU1MgT0JKRUNUU1xuLy8gLS0tXG5cbi8vIGNvbm5lY3QgdmlhIEFwaVxuY29uc3QgYXBpID0gbmV3IEFwaSh7XG4gIGJhc2VVcmw6ICdodHRwczovL2Fyb3VuZC5ub21vcmVwYXJ0aWVzLmNvL3YxL2dyb3VwLTEyJyxcbiAgYXV0aG9yaXphdGlvbjogJ2Q0NTA1MGJiLTYwNTQtNDYxZi1hN2Q3LWYyOTllMTQ1YTFmMCcsXG59KTtcblxuLy8gaW5pdGlhbGl6ZSBmb3JtIHZhbGlkYXRpb25cbmNvbnN0IGFkZFBsYWNlVmFsaWRhdGlvbiA9IG5ldyBGb3JtVmFsaWRhdG9yKGZvcm1JdGVtcywgaW1hZ2VBZGRlckZvcm0pO1xuY29uc3QgcHJvZmlsZVZhbGlkYXRpb24gPSBuZXcgRm9ybVZhbGlkYXRvcihmb3JtSXRlbXMsIHByb2ZpbGVFZGl0b3JGb3JtKTtcbmNvbnN0IGF2YXRhclZhbGlkYXRpb24gPSBuZXcgRm9ybVZhbGlkYXRvcihmb3JtSXRlbXMsIGF2YXRhclVwZGF0ZUZvcm0pO1xucHJvZmlsZVZhbGlkYXRpb24uZW5hYmxlVmFsaWRhdGlvbigpO1xuYWRkUGxhY2VWYWxpZGF0aW9uLmVuYWJsZVZhbGlkYXRpb24oKTtcbmF2YXRhclZhbGlkYXRpb24uZW5hYmxlVmFsaWRhdGlvbigpO1xuXG4vLyBpbml0aWFsaXplIHVzZXJJbmZvXG5jb25zdCB1c2VySW5mbyA9IG5ldyBVc2VySW5mbyh7XG4gIG5hbWVFbGVtZW50OiBwcm9maWxlTmFtZUVsZW1lbnQsXG4gIGFib3V0RWxlbWVudDogcHJvZmlsZUFib3V0RWxlbWVudCxcbiAgYXZhdGFyRWxlbWVudDogcHJvZmlsZUF2YXRhckVsZW1lbnQsXG59KTtcblxuLy8gaW5pdGlhbGl6ZSBwbGFjZSBkZWxldGUgZm9ybVxuY29uc3QgY29uZmlybURlbGV0ZVBvcHVwID0gbmV3IFBvcHVwRGVsZXRlKHtcbiAgcG9wdXBTZWxlY3RvcjogJy5wb3B1cF9yb2xlX2RlbGV0ZScsXG4gIGZvcm1TdWJtaXRIYW5kbGVyOiAoY2FyZEVsZW1lbnQsIGNhcmRJZCkgPT4ge1xuICAgIGFwaVxuICAgICAgLmRlbGV0ZUNhcmQoY2FyZElkKVxuICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICBjYXJkRWxlbWVudC5yZW1vdmUoKTtcbiAgICAgICAgY29uZmlybURlbGV0ZVBvcHVwLmNsb3NlKCk7XG4gICAgICB9KVxuICAgICAgLmNhdGNoKGVyciA9PiBjb25zb2xlLmVycm9yKGBQcm9ibGVtIGRlbGV0aW5nIGNhcmQ6ICR7ZXJyfWApKTtcbiAgfSxcbn0pO1xuXG5jb25zdCBjcmVhdGVOZXdDYXJkID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgcmV0dXJuIG5ldyBDYXJkKHtcbiAgICBjYXJkOiBpdGVtLFxuICAgIGhhbmRsZUNhcmRDbGljazogKG5hbWUsIGxpbmspID0+IHtcbiAgICAgIGltYWdlUHJldmlld1BvcHVwLm9wZW4obmFtZSwgbGluayk7XG4gICAgfSxcbiAgICBoYW5kbGVEZWxldGVDbGljazogZXZ0ID0+IHtcbiAgICAgIGNvbmZpcm1EZWxldGVQb3B1cC5vcGVuKGV2dCwgaXRlbS5faWQpO1xuICAgIH0sXG4gICAgdXNlckRhdGE6IHVzZXJJbmZvLmdldFVzZXJJbmZvKCksXG4gICAgaGFuZGxlTGlrZUNhcmQ6IHN0YXR1cyA9PiB7XG4gICAgICByZXR1cm4gc3RhdHVzID8gYXBpLmxpa2VDYXJkKGl0ZW0uX2lkKSA6IGFwaS5yZW1vdmVMaWtlKGl0ZW0uX2lkKTtcbiAgICB9LFxuICAgIHRlbXBsYXRlU2VsZWN0b3I6ICcjcGxhY2UtdGVtcGxhdGUnLFxuICB9KTtcbn07XG5cbi8vIGluaXRpYWxpemUgYW5kIHBvcHVsYXRlIHBsYWNlcyBjb250YWluZXJcbmNvbnN0IHBsYWNlQ2FyZHMgPSBuZXcgU2VjdGlvbih7XG4gIHJlbmRlcmVyOiBpdGVtID0+IHtcbiAgICBjb25zdCBuZXdDYXJkID0gY3JlYXRlTmV3Q2FyZChpdGVtKTtcbiAgICBwbGFjZUNhcmRzLnNldEl0ZW1zKG5ld0NhcmQuY3JlYXRlQ2FyZCgpKTtcbiAgfSxcbiAgY29udGFpbmVyU2VsZWN0b3I6IHBsYWNlc0NvbnRhaW5lclNlbGVjdG9yLFxufSk7XG5cbi8vIGluaXRpYWxpemUgaW1hZ2UgcHJldmlldyBwb3B1cFxuY29uc3QgaW1hZ2VQcmV2aWV3UG9wdXAgPSBuZXcgUG9wdXBXaXRoSW1hZ2UoJy5wb3B1cF9yb2xlX2ltYWdlJyk7XG5cbi8vIGluaXRpYWxpemUgcHJvZmlsZSBlZGl0b3IgcG9wdXBcbmNvbnN0IHByb2ZpbGVFZGl0b3IgPSBuZXcgUG9wdXBXaXRoRm9ybSh7XG4gIHBvcHVwU2VsZWN0b3I6ICcucG9wdXBfcm9sZV9lZGl0JyxcbiAgZm9ybVN1Ym1pdEhhbmRsZXI6IGRhdGEgPT4ge1xuICAgIGFwaVxuICAgICAgLnVwZGF0ZVByb2ZpbGUoZGF0YSlcbiAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgdXNlckluZm8udXBkYXRlVXNlckluZm8oZGF0YSk7XG4gICAgICAgIHVzZXJJbmZvLnJlbmRlclVzZXJJbmZvKCk7XG4gICAgICAgIHByb2ZpbGVFZGl0b3IuY2xvc2UoKTtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goZXJyID0+IGNvbnNvbGUuZXJyb3IoYFByb2JsZW0gdXBkYXRpbmcgcHJvZmlsZTogJHtlcnJ9YCkpO1xuICB9LFxufSk7XG5cbi8vIGluaXRpYWxpemUgaW1hZ2UgYWRkZXIgZWRpdG9yIHBvcHVwXG5jb25zdCBpbWFnZUFkZGVyUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybSh7XG4gIHBvcHVwU2VsZWN0b3I6ICcucG9wdXBfcm9sZV9hZGQnLFxuICBmb3JtU3VibWl0SGFuZGxlcjogZGF0YSA9PiB7XG4gICAgYXBpXG4gICAgICAuYWRkQ2FyZChkYXRhKVxuICAgICAgLnRoZW4oY2FyZERhdGEgPT4ge1xuICAgICAgICBjb25zdCBuZXdDYXJkID0gY3JlYXRlTmV3Q2FyZChjYXJkRGF0YSk7XG4gICAgICAgIHBsYWNlQ2FyZHMuc2V0SXRlbXMobmV3Q2FyZC5jcmVhdGVDYXJkKCkpO1xuICAgICAgfSlcbiAgICAgIC50aGVuKCgpID0+IGltYWdlQWRkZXJQb3B1cC5jbG9zZSgpKVxuICAgICAgLmNhdGNoKGVyciA9PiBjb25zb2xlLmVycm9yKGBQcm9ibGVtIGFkZGluZyBjYXJkOiAke2Vycn1gKSk7XG4gIH0sXG59KTtcblxuLy8gaW5pdGlhbGl6ZSAgYXZhdGFyIHVwZGF0ZSBwb3B1cFxuY29uc3QgYXZhdGFyVXBkYXRlUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybSh7XG4gIHBvcHVwU2VsZWN0b3I6ICcucG9wdXBfcm9sZV9hdmF0YXInLFxuICBmb3JtU3VibWl0SGFuZGxlcjogZGF0YSA9PiB7XG4gICAgdXNlckluZm8ucmVtb3ZlQXZhdGFyKCk7IC8vIGRpc3BsYXlzIGxvYWRpbmcgZWZmZWN0IHdoaWxlIHNlcnZlciByZXNwb25kc1xuICAgIGFwaVxuICAgICAgLnVwZGF0ZUF2YXRhcihkYXRhKVxuICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICB1c2VySW5mby51cGRhdGVVc2VySW5mbyhkYXRhKTtcbiAgICAgICAgdXNlckluZm8ucmVuZGVyVXNlckluZm8oKTtcbiAgICAgICAgYXZhdGFyVXBkYXRlUG9wdXAuY2xvc2UoKTtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goZXJyID0+IGNvbnNvbGUuZXJyb3IoYFByb2JsZW0gdXBkYXRpbmcgYXZhdGFyOiAke2Vycn1gKSk7XG4gIH0sXG59KTtcblxuLy8gLS0tXG4vLyBcIlRVUk4gT05cIiBQQUdFIC0gQkVHSU4gTElTVEVOSU5HIEZPUiBVU0VSIEVWRU5UU1xuLy8gLS0tXG5cbi8vIHNldCBldmVudCBsaXN0ZW5lcnMgb24gIGNsYXNzIG9iamVjdHNcbmNvbmZpcm1EZWxldGVQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xuaW1hZ2VQcmV2aWV3UG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbnByb2ZpbGVFZGl0b3Iuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbmltYWdlQWRkZXJQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xuYXZhdGFyVXBkYXRlUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuLy8gc2V0IGV2ZW50IGxpc3RlbmVycyB0byBwYWdlIGJ1dHRvbnNcbmVkaXRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gIGNvbnN0IHsgbmFtZSwgYWJvdXQgfSA9IHVzZXJJbmZvLmdldFVzZXJJbmZvKCk7XG4gIHBvcHVwTmFtZS52YWx1ZSA9IG5hbWU7XG4gIHBvcHVwVGl0bGUudmFsdWUgPSBhYm91dDtcbiAgcHJvZmlsZVZhbGlkYXRpb24udG9nZ2xlQnV0dG9uU3RhdGUoKTtcbiAgcHJvZmlsZUVkaXRvci5vcGVuKCk7XG59KTtcblxuYWRkQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICBpbWFnZUFkZGVyUG9wdXAub3BlbigpO1xuICBhZGRQbGFjZVZhbGlkYXRpb24udG9nZ2xlQnV0dG9uU3RhdGUoKTtcbn0pO1xuXG5hdmF0YXJCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gIGF2YXRhclVwZGF0ZVBvcHVwLm9wZW4oKTtcbiAgYXZhdGFyVmFsaWRhdGlvbi50b2dnbGVCdXR0b25TdGF0ZSgpO1xufSk7XG5cbi8vIC0tLVxuLy8gRkVUQ0ggQU5EIERJU1BMQVkgSU5JVElBTCBDT05URU5UXG4vLyAtLS1cbmNvbnN0IHJlbW92ZUxvYWRpbmdTdHlsZXMgPSBmdW5jdGlvbiAoKSB7XG4gIHByb2ZpbGVOYW1lRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKCdzaGltbWVyJyk7XG4gIHByb2ZpbGVBYm91dEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgnc2hpbW1lcicpO1xuICBlZGl0QnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUoJ2hpZGUnKTtcbiAgYWRkQnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUoJ2hpZGUnKTtcbn07XG5cbmFwaVxuICAvLyBmZXRjaCBhbmQgc3RvcmUgdXNlciBkYXRhXG4gIC5nZXRVc2VySW5mbygpXG4gIC50aGVuKHVzZXJEYXRhID0+IHtcbiAgICB1c2VySW5mby51cGRhdGVVc2VySW5mbyh1c2VyRGF0YSk7XG4gIH0pXG4gIC8vIGZldGNoIGFuZCByZW5kZXIgZ3JvdXAgY2FyZHNcbiAgLnRoZW4oKCkgPT4ge1xuICAgIGFwaS5nZXRHcm91cENhcmRzKCkudGhlbihmZXRjaGVkQ2FyZHMgPT4ge1xuICAgICAgcGxhY2VDYXJkcy5yZW5kZXJJdGVtcyhmZXRjaGVkQ2FyZHMucmV2ZXJzZSgpKTtcbiAgICB9KTtcbiAgfSlcbiAgLy8gcmVuZGVyIHN0b3JlZCB1c2VyIGluZm9cbiAgLnRoZW4oKCkgPT4ge1xuICAgIHVzZXJJbmZvLnJlbmRlclVzZXJJbmZvKCk7IC8vIFN1Y2Nlc3NmdWxseSB1cGRhdGVzIHRoZSBwcm9maWxlXG4gICAgcmVtb3ZlTG9hZGluZ1N0eWxlcygpOyAvLyBSZW1vdmVzIHNoaW1tZXIgZWZmZWN0XG4gIH0pXG4gIC5jYXRjaChlcnIgPT4gY29uc29sZS5lcnJvcihgUHJvYmxlbSByZW5kZXJpbmcgY29udGVudDogJHtlcnJ9YCkpO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==